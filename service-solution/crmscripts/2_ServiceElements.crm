#setLanguageLevel 3;
// Export all service elements as a TXT file.
// Tables ejscript, screen_chooser, screen_definition, screen_definition_action, screen_definition_element, screen_definition_language, screen_definition_hidden
// marce 2022-09-03
//
// Usage: https://online.superoffice.com/CustXXXXX/CS/scripts/customer.fcgi?_sf=0&action=printBin&includeId=ServiceElements&key=<YourKey>

String content;
String linebreak = "\r\n";
Void Display(String table, String fields, String order, String filter)
{
  SearchEngine se;
  String[] f = fields.split(",");
  for (Integer i = 0; i < f.length(); i++) se.addField(table + "." + f[i]);
  String[] o = order.split(",");
  for (Integer i = 0; i < o.length(); i++) se.addOrder(table + "." + o[i], true);
  if (!filter.isEmpty())
  {
    String[] c = filter.split(",");
    for (Integer i = 0; i < c.length(); i+=3) se.addCriteria(table + "." + c[i], c[i + 1], c[i + 2]);
  }
  content.append("******** " + table + " (start) ********");
  content.append(linebreak);
  content.append(se.countRows().toString() + " rows");
  content.append(linebreak);
  for (se.select(); !se.eof(); se.next())
  {
    String msg = "";
    for (Integer i = 0; i < f.length(); i++)
    {
      if (i > 0)
      {
        msg.append(", ");
      }
      msg.append(f[i]);
      msg.append("=");
      msg.append(se.getField(i));
    }
    content.append(msg);
    content.append(linebreak);
  }
  content.append("******** " + table + " (end) ********");
  content.append(linebreak);
}

String Locator()
{
  // Returns path CustXXXXX for online, host for onsite
  // url1=http://crm.demo.ch, url2=http://crm.demo.ch/service/scripts/customer.fcgi?_sf=0
  String url1 = getCgiUrl();
  String url2 = getProgramCustomer();
  String result = url2.subString(url1.getLength() + 1, url2.getLength() - url1.getLength() - 1);
  Integer pos = result.find("/");
  if (pos > 0)
  {
    result = result.subString(0, pos);
  }
  if (!result.toLower().beginsWith("cust"))
  {
    pos = url1.find("//");
    if (pos > 0)
    {
      result = url1.subString(pos + 2, url1.getLength() - 2).substitute("/", "");
    }
  }
  return result;
}

Display("ejscript", "description,include_id,access_key,body", "description", "include_id,NotBeginsWith,SuperMacro");
Display("screen_chooser", "description,enabled,ejscript", "description", "");
Display("screen_definition", "name,load_script_body,load_post_cgi_script_body,load_final_script_body,creation_script", "name", "");
Display("screen_definition_action", "screen_definition.name,button,ejscript_body,do_check", "screen_definition.name,button", "");
Display("screen_definition_element", "screen_definition.name,name,element_type,description,creation_script,order_pos,base_table,hide", "screen_definition.name,name", "name,contains,[A-Z]%");
Display("screen_definition_language", "screen_definition.name,language,variable_name,variable_value", "screen_definition.name,language,id", "screen_definition.name,contains,[A-Z]%");
Display("screen_definition_hidden", "screen_definition.name,variable", "screen_definition.name,id", "");

// output
String h = "Content-type: text/plain\nContent-Disposition: attachment; filename=" + Locator() + "_config.txt\nPragma: no-cache\nExpires: 0";
h.append("\n\n");  // Put TWO newline characters Between header and content
print(h);
Byte[] b = content.toByteArray();
printBinary(b);
